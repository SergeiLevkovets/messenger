{"version":3,"sources":["utils/validators/validators.js","componets/common/formControl/FormControl.js","componets/common/formControl/FormControl.module.css","componets/Login/login.module.css","componets/Login/Login.jsx","componets/Login/LoginContainer.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","FormControl","meta","touched","error","children","hasError","className","css","formControl","Textarea","props","input","restProps","Input","CreateField","placeholder","name","validators","component","text","validate","module","exports","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","formSummaryError","Login","isAuth","to","doLogin","email","password","rememberMe","LoginContainer","this","React","Component","mapDispatchToProps","login","connect","state","getIsAuth"],"mappings":"wGAAA,oEAAO,IAAMA,EAAW,SAACC,GACrB,IAAIA,EAIJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EACf,MAAM,iBAAN,OAAwBA,EAAxB,e,oMCNFE,EAAc,SAAC,GAAwC,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SAEpCC,EAAWH,GAAWC,EAE5B,OACI,sBAAKG,UAAWC,IAAIC,YAAc,KAAOH,EAAWE,IAAIJ,MAAQ,IAAhE,UACI,8BACKC,IAEJC,GAAY,+BAAOF,QAMnBM,EAAW,SAACC,GAAW,IACzBC,EAAuBD,EAAvBC,MAAUC,EADc,YACDF,EADC,WAE/B,OAAO,cAACV,EAAD,2BAAiBU,GAAjB,aAAwB,oDAAcC,GAAWC,QAG/CC,EAAQ,SAACH,GAAW,IACtBC,EAAuBD,EAAvBC,MAAUC,EADW,YACEF,EADF,WAE5B,OAAO,cAACV,EAAD,2BAAiBU,GAAjB,aAAwB,iDAAWC,GAAWC,QAG5CE,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CR,EAA3C,uDAAkD,GAAIS,EAAtD,uDAA6D,GAA7D,OACvB,gCACI,cAAC,IAAD,aAAOJ,YAAaA,EACbC,KAAMA,EACNE,UAAWA,EACXE,SAAUH,GACNP,IALf,IAKyBS,O,oBClC7BE,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,6B,oBCAzED,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,UAAY,yBAAyB,aAAe,4BAA4B,iBAAmB,kC,sKCqBzKC,EAAiBC,YAAU,CAC7BC,KAAM,aADaD,EAfL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcvB,EAAW,EAAXA,MAE9B,OACI,uBAAMwB,SAAUD,EAAhB,UACKZ,YAAY,QAAS,QAAS,CAACnB,KAAWkB,KAC1CC,YAAY,WAAY,WAAY,CAACnB,KAAWkB,IAAO,CAACe,KAAM,aAC9Dd,YAAY,KAAM,aAAc,GAAID,IAAO,CAACe,KAAM,YAAa,eAC/DzB,GAAS,qBAAKG,UAAWC,IAAIsB,iBAApB,SAAuC1B,IACjD,8BACI,mDA0BD2B,EAhBD,SAACpB,GAMX,OAAIA,EAAMqB,OACC,cAAC,IAAD,CAAUC,GAAI,aAGlB,gCACH,uCACA,cAACT,EAAD,CAAgBI,SAVH,SAAC/B,GACdc,EAAMuB,QAAQrC,EAAMsC,MAAOtC,EAAMuC,SAAUvC,EAAMwC,mB,gBCvBnDC,E,uKAGE,OAAO,mCACH,cAAC,EAAD,eAAWC,KAAK5B,c,GAJC6B,IAAMC,WAc/BC,EAAqB,CACrBR,QAASS,KAGEC,uBATO,SAACC,GAAD,MAAY,CAC9Bb,OAAQc,YAAUD,MAQkBH,EAAzBE,CAA6CN","file":"static/js/7.e34918bf.chunk.js","sourcesContent":["export const required = (value) => {\n    if (value) {\n        return undefined\n    }\n\n    return \"field is required\"\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) {\n        return `Max length is ${maxLength} symbols`\n    }\n\n    return undefined\n}","import css from \"./FormControl.module.css\";\nimport React from \"react\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({meta: {touched, error}, children}) => {\n\n    const hasError = touched && error;\n\n    return (\n        <div className={css.formControl + \" \" + (hasError ? css.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n\n}\n\nexport const Textarea = (props) => {\n    const {input, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\n}\n\nexport const CreateField = (placeholder, name, validators, component, props= {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder}\n               name={name}\n               component={component}\n               validate={validators}\n               {...props}/> {text}\n    </div>\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__RvFaQ\",\"error\":\"FormControl_error__Hz8ev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"login_users__1GHFb\",\"photo\":\"login_photo__34NqJ\",\"preloader\":\"login_preloader__w_pi2\",\"selectedPage\":\"login_selectedPage__1llwD\",\"formSummaryError\":\"login_formSummaryError__zukCH\"};","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {CreateField, Input} from \"../common/formControl/FormControl\";\nimport {required} from \"../../utils/validators/validators\";\nimport {Redirect} from \"react-router-dom\";\nimport css from \"./login.module.css\"\n\nconst LoginForm = ({handleSubmit, error}) => {\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {CreateField('Email', 'email', [required], Input)}\n            {CreateField('Password', 'password', [required], Input, {type: 'password'})}\n            {CreateField(null, 'rememberMe', [], Input, {type: 'checkbox'}, \"Remember me\")}\n            {error && <div className={css.formSummaryError}>{error}</div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({\n    form: 'loginForm'\n})(LoginForm)\n\nconst Login = (props) => {\n\n    const onSubmit = (value) => {\n        props.doLogin(value.email, value.password, value.rememberMe)\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n}\n\nexport default Login;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Login from \"./Login\";\nimport {login} from \"../../redux/AuthReducer\";\nimport {getIsAuth} from \"../../redux/AuthSelectors\";\n\nclass LoginContainer extends React.Component {\n\n    render() {\n        return <>\n            <Login {...this.props}/>\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    isAuth: getIsAuth(state)\n})\n\n\nlet mapDispatchToProps = {\n    doLogin: login\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);"],"sourceRoot":""}