{"version":3,"sources":["utils/validators/validators.js","componets/common/formControl/FormControl.js","componets/common/formControl/FormControl.module.css","componets/common/formControl/AddMessageForm.jsx","hoc/AuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","componets/Profile/ProfileInfo/ProfileInfo.module.css","componets/Profile/MyPost/MyPost.module.css","componets/Profile/Post/Post.module.css","componets/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","componets/Profile/ProfileInfo/ProfileInfo.jsx","componets/Profile/Post/Post.jsx","componets/Profile/MyPost/MyPost.jsx","componets/Profile/MyPost/MyPostContainer.jsx","componets/Profile/Profile.jsx","componets/Profile/ProfileConteiner.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","FormControl","meta","touched","error","children","hasError","className","css","formControl","Textarea","props","input","restProps","Input","CreateField","placeholder","name","validators","component","text","validate","module","exports","maxLength10","AddMessageForm","onSubmit","handleSubmit","mapStateToProps","state","isAuth","getIsAuth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","storeStatus","updateStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","autoFocus","onBlur","onDoubleClick","ProfileInfo","profile","descriptionBlock","src","photos","large","aboutMe","fullName","userId","Preloader","Post","post","message","like","MyPost","memo","postsElements","posts","map","p","likesCount","postsBlock","AddMessageFormRedux","values","addPost","newMessageBody","reduxForm","form","mapDispatchToProps","MyPostContainer","profilePage","newPostText","Profile","ProfileContainer","match","authUserId","params","getUserById","getStatus","compose","getAuthUserId","withRouter"],"mappings":"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","file":"static/js/5.c7b3843a.chunk.js","sourcesContent":["export const required = (value) => {\n    if (value) {\n        return undefined\n    }\n\n    return \"field is required\"\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) {\n        return `Max length is ${maxLength} symbols`\n    }\n\n    return undefined\n}","import css from \"./FormControl.module.css\";\nimport React from \"react\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({meta: {touched, error}, children}) => {\n\n    const hasError = touched && error;\n\n    return (\n        <div className={css.formControl + \" \" + (hasError ? css.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n\n}\n\nexport const Textarea = (props) => {\n    const {input, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\n}\n\nexport const CreateField = (placeholder, name, validators, component, props= {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder}\n               name={name}\n               component={component}\n               validate={validators}\n               {...props}/> {text}\n    </div>\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__RvFaQ\",\"error\":\"FormControl_error__Hz8ev\"};","import {Field} from \"redux-form\";\nimport React from \"react\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"./FormControl\";\n\nconst maxLength10 = maxLengthCreator(10)\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} name='newMessageBody' placeholder='Enter your message' validate={[required, maxLength10]}/>\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nexport default AddMessageForm","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {getIsAuth} from \"../redux/AuthSelectors\";\n\nlet mapStateToProps = (state) => {\n    return {\n        isAuth: getIsAuth(state)\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/loginName'/>\n            return <Component {...this.props} />\n        }\n    }\n\n    return connect(mapStateToProps)(RedirectComponent);\n\n\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__2EdwZ\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1JEES\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPost_postsBlock__1WoqL\",\"post\":\"MyPost_post__3dMxK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2ejJk\"};","import React, {useState, useEffect} from \"react\";\n\nconst ProfileStatusWithHooks = ({storeStatus, updateStatus}) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(storeStatus);\n\n    useEffect(() => {\n        setStatus(storeStatus);\n    }, [storeStatus]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deActivateEditMode = () => {\n        setEditMode(false);\n        updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div>\n            {!editMode ?\n                <div>\n                        <span\n                            onDoubleClick={activateEditMode}>{storeStatus || 'write your status'}</span>\n                </div>\n                :\n                <div>\n                    <input onChange={onStatusChange} autoFocus={true} value={status}\n                           onBlur={deActivateEditMode}/>\n                </div>\n            }\n        </div>\n    )\n\n}\n\nexport default ProfileStatusWithHooks","import React from 'react';\nimport css from './ProfileInfo.module.css';\nimport Preloader from \"../../common/preloader/Preloader\";\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\";\n\n\nconst ProfileInfo = ({profile, storeStatus, updateStatus}) => {\n    if (!profile) {\n        return <Preloader/>\n    }\n    return (\n\n        <div>\n            <h4>ProfileInfo</h4>\n            <ProfileStatusWithHooks storeStatus={storeStatus}\n                                    updateStatus={updateStatus}/>\n            <div className={css.descriptionBlock}>\n                <img src={profile.photos.large}/>\n                <div>\"aboutMe\": {profile.aboutMe}</div>\n                <div>\"fullName\": {profile.fullName}</div>\n                <div>\"userId\": {profile.userId}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport css from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n        <div className={css.post}>\n            <img src='https://www.meme-arsenal.com/memes/8ab5fe07681cd172915e9472a0a8443d.jpg'/>\n            <div>\n                {props.message}\n            </div>\n            <span>Like {props.like}</span>\n        </div>\n    )\n\n}\n\nexport default Post;","import React from 'react';\nimport css from './MyPost.module.css';\nimport Post from \"../Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport AddMessageForm from \"../../common/formControl/AddMessageForm\";\n\nconst MyPost = React.memo((props) => {\n    let postsElements = props.posts.map(\n        p => <Post message={p.message} like={p.likesCount}/>\n    )\n\n    let addNewMessage = (values) => {\n        props.addPost(values.newMessageBody)\n    }\n\n    return (\n        <div className={css.postsBlock}>\n            <h3>My post</h3>\n\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\n\n            <div className={css.post}>\n                {postsElements}\n            </div>\n        </div>\n    )\n})\n\nconst AddMessageFormRedux = reduxForm({\n    form: 'profileAddMessageForm'\n})(AddMessageForm)\n\nexport default MyPost;","import React from 'react';\nimport {addPost} from \"../../../redux/ProfileReducer\";\nimport MyPost from \"./MyPost\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = {\n    addPost,\n}\n\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\n\nexport default MyPostContainer;\n","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostContainer from \"./MyPost/MyPostContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo {...props}/>\n            <MyPostContainer />\n        </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserById, updateStatus} from \"../../redux/ProfileReducer\";\nimport {withRouter} from \"react-router\";\nimport {withAuthRedirect} from \"../../hoc/AuthRedirect\";\nimport {compose} from \"redux\";\nimport {getAuthUserId} from \"../../redux/AuthSelectors\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        const {match, authUserId} = this.props;\n        let userId = match.params.userId;\n        if (!userId) {\n            if (authUserId) {\n                userId = authUserId;\n            } else userId = 2\n        }\n        this.props.getUserById(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    storeStatus: state.profilePage.status,\n    authUserId: getAuthUserId(state)\n})\n\nexport default compose(\n    connect(mapStateToProps, {getUserById, getStatus, updateStatus}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)\n"],"sourceRoot":""}