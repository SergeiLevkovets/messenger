{"version":3,"sources":["componets/common/paginator/Paginator.module.css","componets/Users/Users.module.css","componets/common/paginator/Paginator.jsx","assets/userPhoto.png","componets/Users/User.jsx","componets/Users/Users.jsx","componets/Users/UsersContainer.jsx"],"names":["module","exports","Paginator","totalCount","pageSize","currentPage","onPageChanged","portionSize","pageCount","Math","ceil","pages","i","push","useState","portionNumber","setPortionNumber","portionCount","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","p","map","className","css","selectedPage","User","user","followingInProgress","unFollow","follow","to","id","photo","src","photos","small","userPhoto","followed","disabled","some","name","status","Users","users","u","UsersContainer","page","props","setCurrentPage","getUsers","this","isFetching","Preloader","React","Component","mapDispatchToProps","toggleIsFollowingProgress","connect","state","usersPage"],"mappings":"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","file":"static/js/8.291cd66a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__sWL56\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__RWrYY\",\"photo\":\"Users_photo__bBKRP\",\"preloader\":\"Users_preloader__AgxJo\",\"selectedPage\":\"Users_selectedPage__1a04p\"};","import React, {useState} from 'react';\nimport css from './Paginator.module.css';\n\nlet Paginator = ({totalCount, pageSize, currentPage, onPageChanged, portionSize}) => {\n\n    let pageCount = Math.ceil(totalCount / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pageCount; i++) {\n        pages.push(i);\n    }\n\n    let [portionNumber, setPortionNumber] = useState(1)\n    let portionCount = Math.ceil(totalCount / portionSize);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n    return <div>\n        {portionNumber > 1 &&\n        <button onClick={() => setPortionNumber(portionNumber - 1)}>PREV</button>\n        }\n        {pages.filter((p) => {return p >= leftPortionPageNumber && p <= rightPortionPageNumber}).map((p) => {\n                return <button key={p} className={currentPage === p && css.selectedPage}\n                               onClick={() => onPageChanged(p)}>{p}</button>\n            })}\n        {portionNumber < portionCount &&\n        <button onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button>\n        }\n    </div>\n\n}\n\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/userPhoto.d5393b94.png\";","import React from 'react';\nimport css from './Users.module.css';\nimport userPhoto from \"../../assets/userPhoto.png\"\nimport {NavLink} from \"react-router-dom\";\n\nconst User = ({user, followingInProgress, unFollow, follow}) => {\n    return (\n        <div>\n            <NavLink to={'/profile/' + user.id}>\n                <div>\n                    <img className={css.photo} src={user.photos.small || userPhoto}/>\n                </div>\n            </NavLink>\n            <div>\n                {user.followed\n                    ? <button disabled={followingInProgress.some(id => id === user.id)}\n                              onClick={() => {\n                                  unFollow(user.id)\n                              }}\n                    >Unfollow</button>\n                    : <button disabled={followingInProgress.some(id => id === user.id)}\n                              onClick={() => {\n                                  follow(user.id)\n                              }}\n                    >Follow</button>\n                }\n            </div>\n            <div>{user.name}</div>\n            <div>{user.status}</div>\n            <div>'user.location.country'</div>\n            <div>'user.location.city'</div>\n        </div>\n    )\n}\n\nexport default User;","import React from 'react';\nimport Paginator from \"../common/paginator/Paginator\";\nimport User from \"./User\";\nimport css from \"css\";\n\nconst Users = ({\n                   currentPage, totalCount, pageSize, portionSize, onPageChanged,\n                   users, followingInProgress, unFollow, follow\n               }) => {\n\n    return <div>\n        <Paginator currentPage={currentPage}\n                   onPageChanged={onPageChanged}\n                   totalCount={totalCount}\n                   pageSize={pageSize}\n                   portionSize={portionSize}\n        />\n        {users.map(u =>\n            <User className={css.users}\n                  key={u.id}\n                  user={u}\n                  followingInProgress={followingInProgress}\n                  follow={follow}\n                  unFollow={unFollow}\n            />\n        )}\n    </div>\n}\n\nexport default Users;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {follow, unFollow, getUsers, setCurrentPage, toggleIsFollowingProgress} from \"../../redux/UsersReducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/preloader/Preloader\";\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (page) => {\n        let {setCurrentPage, getUsers, pageSize} = this.props;\n        setCurrentPage(page)\n        getUsers(page, pageSize);\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users onPageChanged={this.onPageChanged} {...this.props}/>\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        portionSize: state.usersPage.portionSize,\n        totalCount: state.usersPage.totalCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\nlet mapDispatchToProps = {\n    follow,\n    unFollow,\n    setCurrentPage,\n    toggleIsFollowingProgress,\n    getUsers\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);"],"sourceRoot":""}