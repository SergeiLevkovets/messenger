{"version":3,"sources":["utils/validators/validators.js","componets/common/formControl/FormControl.js","componets/common/formControl/FormControl.module.css","componets/common/formControl/AddMessageForm.jsx","hoc/AuthRedirect.js","componets/Dialogs/Dialogs.module.css","componets/Dialogs/DialogItem/DialogItem.module.css","componets/Dialogs/Message/Message.module.css","componets/Dialogs/DialogItem/DialogItem.jsx","componets/Dialogs/Message/Message.jsx","componets/Dialogs/Dialogs.jsx","componets/Dialogs/DialogsContainer.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","FormControl","meta","touched","error","children","hasError","className","css","formControl","Textarea","props","input","restProps","Input","CreateField","placeholder","name","validators","component","text","validate","module","exports","maxLength10","AddMessageForm","onSubmit","handleSubmit","mapStateToProps","state","isAuth","getIsAuth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogItem","path","id","dialog","active","Message","message","AddMessageFormRedux","reduxForm","form","Dialogs","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItem","values","addMessage","newMessageBody","mapDispatchToProps","compose","dialogsPage","newMessageText"],"mappings":"wGAAA,oEAAO,IAAMA,EAAW,SAACC,GACrB,IAAIA,EAIJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EACf,MAAM,iBAAN,OAAwBA,EAAxB,e,oMCNFE,EAAc,SAAC,GAAwC,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SAEpCC,EAAWH,GAAWC,EAE5B,OACI,sBAAKG,UAAWC,IAAIC,YAAc,KAAOH,EAAWE,IAAIJ,MAAQ,IAAhE,UACI,8BACKC,IAEJC,GAAY,+BAAOF,QAMnBM,EAAW,SAACC,GAAW,IACzBC,EAAuBD,EAAvBC,MAAUC,EADc,YACDF,EADC,WAE/B,OAAO,cAACV,EAAD,2BAAiBU,GAAjB,aAAwB,oDAAcC,GAAWC,QAG/CC,EAAQ,SAACH,GAAW,IACtBC,EAAuBD,EAAvBC,MAAUC,EADW,YACEF,EADF,WAE5B,OAAO,cAACV,EAAD,2BAAiBU,GAAjB,aAAwB,iDAAWC,GAAWC,QAG5CE,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CR,EAA3C,uDAAkD,GAAIS,EAAtD,uDAA6D,GAA7D,OACvB,gCACI,cAAC,IAAD,aAAOJ,YAAaA,EACbC,KAAMA,EACNE,UAAWA,EACXE,SAAUH,GACNP,IALf,IAKyBS,O,oBClC7BE,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,6B,8ECInEC,EAAc1B,YAAiB,IAetB2B,IAbQ,SAACd,GACpB,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,8BACI,cAAC,IAAD,CAAOR,UAAWT,IAAUO,KAAK,iBAAiBD,YAAY,qBAAqBK,SAAU,CAACzB,IAAU4B,OAE5G,8BACI,qD,4JCTZI,EAAkB,SAACC,GACnB,MAAO,CACHC,OAAQC,YAAUF,KAIbG,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKxB,MAAMmB,OACT,cAACG,EAAD,eAAeE,KAAKxB,QADI,cAAC,IAAD,CAAUyB,GAAG,mBAJT,GAEXC,IAAMJ,WAOtC,OAAOK,YAAQV,EAARU,CAAyBJ,K,oBCnBpCZ,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,oBCAjND,EAAOC,QAAU,CAAC,OAAS,6B,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,oHCcbgB,EAXI,SAAC5B,GAEhB,IAAI6B,EAAO,YAAc7B,EAAM8B,GAE/B,OACI,qBAAKlC,UAAWC,IAAIkC,OAAS,IAAMlC,IAAImC,OAAvC,SACI,cAAC,IAAD,CAASP,GAAII,EAAb,SAAoB7B,EAAMM,U,kBCHvB2B,EAJC,SAACjC,GACb,OAAO,qBAAKJ,UAAWC,IAAIqC,QAApB,SAA8BlC,EAAMkC,W,kBCiCzCC,EAAsBC,YAAU,CAClCC,KAAM,yBADkBD,CAEzBtB,KAEYwB,EAlCC,SAACtC,GAEb,IAAIuC,EAAkBvC,EAAMwC,QAAQC,KAChC,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYpC,KAAMoC,EAAEpC,KAAMwB,GAAIY,EAAEZ,QAGrCa,EAAmB3C,EAAM4C,SAASH,KAClC,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASX,QAASW,EAAEX,aAO7B,OACI,sBAAKtC,UAAWC,IAAI2C,QAApB,UACI,qBAAK5C,UAAWC,IAAIiD,YAApB,SACKP,IAEL,sBAAK3C,UAAWC,IAAI+C,SAApB,UACI,8BAAMD,IAEN,cAACR,EAAD,CAAqBpB,SAZhB,SAACgC,GACd/C,EAAMgD,WAAWD,EAAOE,0B,iBCH5BC,EAAqB,CACrBF,gBAGWG,sBACX9B,IACAM,aAdkB,SAACT,GACnB,MAAO,CACHsB,QAAStB,EAAMkC,YAAYZ,QAC3BI,SAAU1B,EAAMkC,YAAYR,SAC5BS,eAAgBnC,EAAMkC,YAAYC,kBAUbH,GAFdC,CAGbb","file":"static/js/6.af29b708.chunk.js","sourcesContent":["export const required = (value) => {\n    if (value) {\n        return undefined\n    }\n\n    return \"field is required\"\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) {\n        return `Max length is ${maxLength} symbols`\n    }\n\n    return undefined\n}","import css from \"./FormControl.module.css\";\nimport React from \"react\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({meta: {touched, error}, children}) => {\n\n    const hasError = touched && error;\n\n    return (\n        <div className={css.formControl + \" \" + (hasError ? css.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n\n}\n\nexport const Textarea = (props) => {\n    const {input, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\n}\n\nexport const CreateField = (placeholder, name, validators, component, props= {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder}\n               name={name}\n               component={component}\n               validate={validators}\n               {...props}/> {text}\n    </div>\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__RvFaQ\",\"error\":\"FormControl_error__Hz8ev\"};","import {Field} from \"redux-form\";\nimport React from \"react\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"./FormControl\";\n\nconst maxLength10 = maxLengthCreator(10)\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} name='newMessageBody' placeholder='Enter your message' validate={[required, maxLength10]}/>\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nexport default AddMessageForm","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport {getIsAuth} from \"../redux/AuthSelectors\";\n\nlet mapStateToProps = (state) => {\n    return {\n        isAuth: getIsAuth(state)\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/loginName'/>\n            return <Component {...this.props} />\n        }\n    }\n\n    return connect(mapStateToProps)(RedirectComponent);\n\n\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1EwC-\",\"dialogsItem\":\"Dialogs_dialogsItem__9194w\",\"active\":\"Dialogs_active__G0loI\",\"dialog\":\"Dialogs_dialog__2mx_o\",\"messages\":\"Dialogs_messages__kyFgD\",\"message\":\"Dialogs_message__2z5d5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3fy9e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__cjh3O\"};","import React from 'react';\nimport css from './DialogItem.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n\n    let path = '/dialogs/' + props.id;\n\n    return (\n        <div className={css.dialog + ' ' + css.active}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import React from 'react';\nimport css from './Message.module.css';\n\nconst Message = (props) => {\n    return <div className={css.message}>{props.message}</div>\n}\n\nexport default Message;","import React from 'react';\nimport css from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {reduxForm} from \"redux-form\";\nimport AddMessageForm from \"../common/formControl/AddMessageForm\";\n\nconst Dialogs = (props) => {\n\n    let dialogsElements = props.dialogs.map(\n        d => <DialogItem name={d.name} id={d.id}/>\n    )\n\n    let messagesElements = props.messages.map(\n        m => <Message message={m.message}/>\n    )\n\n    let addMessage = (values) => {\n        props.addMessage(values.newMessageBody);\n    }\n\n    return (\n        <div className={css.dialogs}>\n            <div className={css.dialogsItem}>\n                {dialogsElements}\n            </div>\n            <div className={css.messages}>\n                <div>{messagesElements}</div>\n\n                <AddMessageFormRedux onSubmit={addMessage}/>\n\n            </div>\n        </div>\n    )\n\n}\n\nconst AddMessageFormRedux = reduxForm({\n    form: 'dialogsAddMessageForm'\n})(AddMessageForm)\n\nexport default Dialogs;","import React from 'react';\nimport {addMessage} from \"../../redux/DialogReducer\";\nimport {connect} from \"react-redux\";\nimport Dialogs from \"./Dialogs\";\nimport {withAuthRedirect} from \"../../hoc/AuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages,\n        newMessageText: state.dialogsPage.newMessageText,\n    }\n}\n\nlet mapDispatchToProps = {\n    addMessage\n}\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, mapDispatchToProps)\n)(Dialogs)\n"],"sourceRoot":""}